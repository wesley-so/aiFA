workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/server/.cache/pip"
  POETRY_CACHE_DIR: "$CI_PROJECT_DIR/server/.cache/poetry"
  POETRY_HOME: /opt/poetry

.python-cache:
  cache:
    key:
      files:
        - server/poetry.lock
    paths:
      - server/.cache/

.node-cache:
  cache:
    key:
      files:
        - web/yarn.lock
    paths:
      - web/.yarn-cache/

stages:
  - test
  - build

server:test:
  stage: test
  image: python:3.10-slim
  extends: .python-cache
  before_script:
    - apt-get update
    - apt-get upgrade -y
    - apt-get install -y curl make
    - curl -sSL https://install.python-poetry.org | python3 -
    - export PATH="$POETRY_HOME/bin:$PATH"
  script:
    - cd server/
    - make setup
    - make lint
    - make format-check

server:build:
  rules:
    - if: $CI_MERGE_REQUEST_IID
      when: never
    - when: always
  stage: build
  needs:
    - server:test
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: ["sh"]
  script:
    - export AIFA_SERVER_DIR="${CI_PROJECT_DIR}/server"
    - if [ "$CI_COMMIT_BRANCH" = "$CI_DEFAULT_BRANCH" ];
      then export AIFA_IMAGE_TAG=latest;
      elif [ -z "$CI_COMMIT_TAG" ];
      then export AIFA_IMAGE_TAG="$CI_COMMIT_TAG";
      else export AIFA_IMAGE_TAG="$CI_COMMIT_SHA"
      fi
    # - /kaniko/executor
    #   --context "${AIFA_SERVER_DIR}"
    #   --dockerfile "${AIFA_SERVER_DIR}/Dockerfile"
    #   --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"

web:test:
  stage: test
  image: node:16-slim
  extends: .node-cache
  script:
    - cd web/
    - echo 'yarn-offline-mirror ".yarn-cache/"' >> .yarnrc
    - echo 'yarn-offline-mirror-pruning true' >> .yarnrc
    - yarn install --frozen-lockfile
    - yarn lint
    - yarn test
    - yarn format-check

web:build:
  rules:
    - if: $CI_MERGE_REQUEST_IID
      when: never
    - when: always
  stage: build
  needs:
    - web:test
  image: node:16-slim
  extends: .node-cache
  script:
    - cd web/
    - yarn install --frozen-lockfile
    - yarn build
  artifacts:
    paths:
      - "$CI_PROJECT_DIR/web/build/"

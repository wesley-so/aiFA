# Template job for Python project build
.server-python-template:
  image: python:3.10-slim
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/server/.cache/pip"
    POETRY_CACHE_DIR: "$CI_PROJECT_DIR/server/.cache/poetry"
    POETRY_VERSION: "1.3.2"
  cache:
    key:
      files:
        - server/poetry.lock
    paths:
      - server/.cache/
  before_script:
    - apt-get update
    - apt-get install -y --no-install-recommends make
    - pip3 install "poetry==$POETRY_VERSION"
    - poetry config cache-dir "$POETRY_CACHE_DIR"
  after_script:
    - cd "$CI_PROJECT_DIR/server"
    - poetry env remove --all

server:lint:
  stage: check
  extends:
    - .mr-backend-job-rules
    - .server-python-template
  script:
    - cd "$CI_PROJECT_DIR/server"
    - make setup
    - make ci-lint
    - make format-check
  artifacts:
    when: always
    reports:
      codequality: server/gl-codequality.json

server:build:
  stage: build
  extends:
    - .kaniko-image-build-template
    - .mr-job-skip
  needs:
    - server:lint
  script:
    - export AIFA_SERVER_DIR="${CI_PROJECT_DIR}/server"
    - export AIFA_IMAGE_NAME="${CI_REGISTRY_IMAGE}/server"
    - export AIFA_KANIKO_ARGS="--destination ${AIFA_IMAGE_NAME}:${CI_COMMIT_SHA}"
    - |
      if [ "$CI_COMMIT_BRANCH" = "$CI_DEFAULT_BRANCH" ]; then
        export AIFA_KANIKO_ARGS="${AIFA_KANIKO_ARGS} --destination ${AIFA_IMAGE_NAME}:latest";
      elif [ -n "$CI_COMMIT_TAG" ]; then
        export AIFA_KANIKO_ARGS="${AIFA_KANIKO_ARGS} --destination ${AIFA_IMAGE_NAME}:${CI_COMMIT_TAG}";
      fi
    - /kaniko/executor --cache --context "${AIFA_SERVER_DIR}" --dockerfile "${AIFA_SERVER_DIR}/Dockerfile" ${AIFA_KANIKO_ARGS}

version: "3.8"
services:
  mongo:
    image: mongo:5
    ports:
      - "27017:27017"
    volumes:
      - "mongo_data:/data"
    command: ["--replSet", "dbrs", "--bind_ip_all"]
    healthcheck:
      test: test $$(echo "rs.initiate().ok || rs.status().ok" | mongo --quiet) -eq 1
      interval: 5s
      retries: 6
  server:
    build:
      context: ./server
    ###########################################################
    # Uncomment below lines to use Tensorflow with Nvidia GPU #
    ###########################################################
    #   dockerfile: Dockerfile.gpu
    # environment:
    #   NVIDIA_VISIBLE_DEVICES: all
    #   NVIDIA_DRIVER_CAPABILITIES: compute,utility
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities:
    #             - compute
    #             - utility
    command: make dev
    ports:
      - "8000:8000"
    env_file:
      - server/.env
    depends_on:
      mongo:
        condition: service_healthy
      minio:
        condition: service_started
    volumes:
      - ./server:/aifa
  cron:
    build:
      context: ./cron
    ###########################################################
    # Uncomment below lines to use Tensorflow with Nvidia GPU #
    ###########################################################
      dockerfile: Dockerfile.gpu
    environment:
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: compute,utility
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [compute, utility]
    env_file:
      - cron/.env
    depends_on:
      mongo:
        condition: service_healthy
      minio:
        condition: service_started
    volumes:
      - ./cron:/cron
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9090:9090"
    command: ["server", "/data", "--console-address", ":9090"]
    env_file:
      - minio/.env
    volumes:
      - "minio_data:/data"

volumes:
  mongo_data:
    driver: local
  minio_data:
    driver: local
